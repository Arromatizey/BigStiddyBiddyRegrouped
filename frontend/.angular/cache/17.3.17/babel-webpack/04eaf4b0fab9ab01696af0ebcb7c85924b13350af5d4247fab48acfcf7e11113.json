{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.apiUrl;\n      this.tokenSubject = new BehaviorSubject(localStorage.getItem('token'));\n      this.userIdSubject = new BehaviorSubject(localStorage.getItem('userId'));\n      this.token$ = this.tokenSubject.asObservable();\n      this.userId$ = this.userIdSubject.asObservable();\n    }\n    register(request) {\n      return this.http.post(`${this.baseUrl}/auth/register`, request);\n    }\n    login(request) {\n      return this.http.post(`${this.baseUrl}/auth/login`, request).pipe(tap(response => {\n        localStorage.setItem('token', response.token);\n        localStorage.setItem('userId', response.id);\n        this.tokenSubject.next(response.token);\n        this.userIdSubject.next(response.id);\n      }));\n    }\n    logout() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('userId');\n      this.tokenSubject.next(null);\n      this.userIdSubject.next(null);\n    }\n    forgotPassword(email) {\n      return this.http.post('/auth/forgot-password', {\n        email\n      });\n    }\n    resetPassword(token, newPassword) {\n      return this.http.post('/auth/reset-password', {\n        token,\n        newPassword\n      });\n    }\n    isAuthenticated() {\n      return !!this.tokenSubject.value;\n    }\n    getCurrentUserId() {\n      return this.userIdSubject.value;\n    }\n    getToken() {\n      return this.tokenSubject.value;\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(t) {\n        return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}