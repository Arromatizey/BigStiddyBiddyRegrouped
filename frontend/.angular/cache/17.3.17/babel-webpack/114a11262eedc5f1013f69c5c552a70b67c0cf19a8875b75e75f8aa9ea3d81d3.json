{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nexport const authGuard = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  if (authService.isAuthenticated()) {\n    return true;\n  } else {\n    router.navigate(['/login']);\n    return false;\n  }\n};","map":{"version":3,"names":["inject","Router","AuthService","authGuard","route","state","authService","router","isAuthenticated","navigate"],"sources":["C:\\Users\\Mehdi Chedad\\BigStiddyBiddyRegrouped\\frontend\\src\\app\\auth\\auth.guard.ts"],"sourcesContent":["import { CanActivateFn } from '@angular/router';\r\nimport { inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\nexport const authGuard: CanActivateFn = (route, state) => {\r\n  const authService = inject(AuthService);\r\n  const router = inject(Router);\r\n\r\n  if (authService.isAuthenticated()) {\r\n    return true;\r\n  } else {\r\n    router.navigate(['/login']);\r\n    return false;\r\n  }\r\n};\r\n"],"mappings":"AACA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvD,MAAMC,WAAW,GAAGN,MAAM,CAACE,WAAW,CAAC;EACvC,MAAMK,MAAM,GAAGP,MAAM,CAACC,MAAM,CAAC;EAE7B,IAAIK,WAAW,CAACE,eAAe,EAAE,EAAE;IACjC,OAAO,IAAI;GACZ,MAAM;IACLD,MAAM,CAACE,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAC3B,OAAO,KAAK;;AAEhB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}