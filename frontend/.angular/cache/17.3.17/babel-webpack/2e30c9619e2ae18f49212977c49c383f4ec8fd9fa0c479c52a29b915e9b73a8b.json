{"ast":null,"code":"import { inject } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nexport const authInterceptor = (req, next) => {\n  const authService = inject(AuthService);\n  const token = authService.getToken();\n  if (token) {\n    const clonedRequest = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return next(clonedRequest);\n  }\n  return next(req);\n};","map":{"version":3,"names":["inject","AuthService","authInterceptor","req","next","authService","token","getToken","clonedRequest","clone","setHeaders","Authorization"],"sources":["C:\\Users\\Mehdi Chedad\\BigStiddyBiddyRegrouped\\frontend\\src\\app\\core\\auth.interceptor.ts"],"sourcesContent":["import { HttpInterceptorFn } from '@angular/common/http';\r\nimport { inject } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\nexport const authInterceptor: HttpInterceptorFn = (req, next) => {\r\n  const authService = inject(AuthService);\r\n  const token = authService.getToken();\r\n\r\n  if (token) {\r\n    const clonedRequest = req.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    return next(clonedRequest);\r\n  }\r\n\r\n  return next(req);\r\n};\r\n"],"mappings":"AACA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAASC,WAAW,QAAQ,sBAAsB;AAElD,OAAO,MAAMC,eAAe,GAAsBA,CAACC,GAAG,EAAEC,IAAI,KAAI;EAC9D,MAAMC,WAAW,GAAGL,MAAM,CAACC,WAAW,CAAC;EACvC,MAAMK,KAAK,GAAGD,WAAW,CAACE,QAAQ,EAAE;EAEpC,IAAID,KAAK,EAAE;IACT,MAAME,aAAa,GAAGL,GAAG,CAACM,KAAK,CAAC;MAC9BC,UAAU,EAAE;QACVC,aAAa,EAAE,UAAUL,KAAK;;KAEjC,CAAC;IACF,OAAOF,IAAI,CAACI,aAAa,CAAC;;EAG5B,OAAOJ,IAAI,CAACD,GAAG,CAAC;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}