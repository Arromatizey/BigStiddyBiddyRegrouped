{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let RoomsService = /*#__PURE__*/(() => {\n  class RoomsService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.apiUrl;\n    }\n    createRoom(room) {\n      return this.http.post(`${this.baseUrl}/rooms`, room, {\n        responseType: 'text'\n      });\n    }\n    getRooms() {\n      // ✅ Real API call - backend now provides GET /api/rooms/getAllRooms\n      return this.http.get(`${this.baseUrl}/rooms/getAllRooms`);\n      // TODO: Remove this mock data block once tested\n      // Enhanced mock data matching backend Room model exactly\n      /*\n      const mockRooms: Room[] = [\n        {\n          id: 'a1b2c3d4-e5f6-7890-abcd-ef1234567890',\n          owner: {\n            id: 'user-123',\n            email: 'alice@example.com',\n            displayName: 'Alice Martin',\n            verified: true,\n            createdAt: '2024-01-15T10:30:00Z'\n          },\n          subject: 'Mathématiques',\n          level: 'Intermédiaire',\n          topic: 'Calcul différentiel et intégral',\n          institution: 'Université Paris Diderot',\n          focusDuration: 25,\n          breakDuration: 5,\n          themeConfig: undefined,\n          isActive: true,\n          createdAt: '2024-01-15T14:20:00Z',\n          timerRunning: false,\n          timerStartedAt: undefined,\n          isOnBreak: false\n        },\n        {\n          id: 'b2c3d4e5-f6g7-8901-bcde-f23456789012',\n          owner: {\n            id: 'user-456',\n            email: 'bob@example.com',\n            displayName: 'Bob Dupont',\n            verified: true,\n            createdAt: '2024-01-10T09:15:00Z'\n          },\n          subject: 'Physique',\n          level: 'Avancé',\n          topic: 'Mécanique quantique - États superposés',\n          institution: 'École Polytechnique',\n          focusDuration: 30,\n          breakDuration: 10,\n          themeConfig: '{\"theme\": \"dark\", \"color\": \"blue\"}',\n          isActive: true,\n          createdAt: '2024-01-16T16:45:00Z',\n          timerRunning: true,\n          timerStartedAt: '2024-01-16T17:00:00Z',\n          isOnBreak: false\n        },\n        {\n          id: 'c3d4e5f6-g7h8-9012-cdef-345678901234',\n          owner: {\n            id: 'user-789',\n            email: 'carol@example.com',\n            displayName: 'Caroline Leroy',\n            verified: true,\n            createdAt: '2024-01-12T11:22:00Z'\n          },\n          subject: 'Informatique',\n          level: 'Débutant',\n          topic: 'Algorithmes de tri',\n          institution: 'IUT Paris Descartes',\n          focusDuration: 20,\n          breakDuration: 5,\n          themeConfig: undefined,\n          isActive: true,\n          createdAt: '2024-01-17T09:30:00Z',\n          timerRunning: false,\n          timerStartedAt: undefined,\n          isOnBreak: false\n        }\n      ];\n           // Simulate HTTP delay to match real API behavior\n      return of(mockRooms).pipe(delay(800));\n      */\n    }\n    updateTheme(roomId, themeConfig) {\n      return this.http.patch(`${this.baseUrl}/rooms/${roomId}/theme`, themeConfig);\n    }\n    updateDurations(roomId, request) {\n      return this.http.patch(`${this.baseUrl}/rooms/${roomId}/durations`, request);\n    }\n    joinRoom(roomId, userId) {\n      return this.http.post(`${this.baseUrl}/rooms/${roomId}/join?userId=${userId}`, {});\n    }\n    // Timer controls\n    startTimer(roomId) {\n      return this.http.post(`${this.baseUrl}/timer/${roomId}/start`, {});\n    }\n    pauseTimer(roomId) {\n      return this.http.post(`${this.baseUrl}/timer/${roomId}/pause`, {});\n    }\n    resumeTimer(roomId) {\n      return this.http.post(`${this.baseUrl}/timer/${roomId}/resume`, {});\n    }\n    resetTimer(roomId) {\n      return this.http.post(`${this.baseUrl}/timer/${roomId}/reset`, {});\n    }\n    static {\n      this.ɵfac = function RoomsService_Factory(t) {\n        return new (t || RoomsService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: RoomsService,\n        factory: RoomsService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return RoomsService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}