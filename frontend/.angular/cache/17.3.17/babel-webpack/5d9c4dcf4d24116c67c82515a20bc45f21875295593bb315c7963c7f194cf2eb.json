{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.baseUrl = environment.apiUrl;\n    this.tokenSubject = new BehaviorSubject(localStorage.getItem('token'));\n    this.userIdSubject = new BehaviorSubject(localStorage.getItem('userId'));\n    this.token$ = this.tokenSubject.asObservable();\n    this.userId$ = this.userIdSubject.asObservable();\n    console.log('ðŸ”§ AuthService constructor:');\n    console.log('ðŸ’¾ Initial localStorage token:', localStorage.getItem('token'));\n    console.log('ðŸ’¾ Initial localStorage userId:', localStorage.getItem('userId'));\n    console.log('ðŸ”‘ Initial tokenSubject value:', this.tokenSubject.value);\n    console.log('ðŸ†” Initial userIdSubject value:', this.userIdSubject.value);\n  }\n  register(request) {\n    return this.http.post(`${this.baseUrl}/auth/register`, request, {\n      responseType: 'text'\n    });\n  }\n  login(request) {\n    return this.http.post(`${this.baseUrl}/auth/login`, request).pipe(tap(response => {\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('userId', response.id);\n      this.tokenSubject.next(response.token);\n      this.userIdSubject.next(response.id);\n    }));\n  }\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    this.tokenSubject.next(null);\n    this.userIdSubject.next(null);\n    this.router.navigate(['/']);\n  }\n  forgotPassword(email) {\n    return this.http.post(`${this.baseUrl.replace('/api', '')}/auth/forgot-password`, {\n      email\n    }, {\n      responseType: 'text'\n    });\n  }\n  resetPassword(request) {\n    return this.http.post(`${this.baseUrl.replace('/api', '')}/auth/reset-password`, request, {\n      responseType: 'text'\n    });\n  }\n  isAuthenticated() {\n    return this.getToken() !== null;\n  }\n  getCurrentUserId() {\n    return this.userIdSubject.value;\n  }\n  getToken() {\n    return this.tokenSubject.value;\n  }\n  static {\n    this.Éµfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ÉµÉµinject(i1.HttpClient), i0.ÉµÉµinject(i2.Router));\n    };\n  }\n  static {\n    this.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n      token: AuthService,\n      factory: AuthService.Éµfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","tap","environment","AuthService","constructor","http","router","baseUrl","apiUrl","tokenSubject","localStorage","getItem","userIdSubject","token$","asObservable","userId$","console","log","value","register","request","post","responseType","login","pipe","response","setItem","token","id","next","logout","removeItem","navigate","forgotPassword","email","replace","resetPassword","isAuthenticated","getToken","getCurrentUserId","i0","ÉµÉµinject","i1","HttpClient","i2","Router","factory","Éµfac","providedIn"],"sources":["C:\\Users\\Mehdi Chedad\\BigStiddyBiddyRegrouped\\frontend\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { environment } from '../../environments/environment';\nimport { LoginRequest, RegisterRequest, AuthResponse, ResetPasswordRequest } from '../shared/models/auth.models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private baseUrl = environment.apiUrl;\n  private tokenSubject = new BehaviorSubject<string | null>(localStorage.getItem('token'));\n  private userIdSubject = new BehaviorSubject<string | null>(localStorage.getItem('userId'));\n\n  public token$ = this.tokenSubject.asObservable();\n  public userId$ = this.userIdSubject.asObservable();\n\n  constructor(private http: HttpClient, private router: Router) {\n    console.log('ðŸ”§ AuthService constructor:');\n    console.log('ðŸ’¾ Initial localStorage token:', localStorage.getItem('token'));\n    console.log('ðŸ’¾ Initial localStorage userId:', localStorage.getItem('userId'));\n    console.log('ðŸ”‘ Initial tokenSubject value:', this.tokenSubject.value);\n    console.log('ðŸ†” Initial userIdSubject value:', this.userIdSubject.value);\n  }\n\n  register(request: RegisterRequest): Observable<string> {\n    return this.http.post(`${this.baseUrl}/auth/register`, request, { responseType: 'text' });\n  }\n\n  login(request: LoginRequest): Observable<AuthResponse> {\n    return this.http.post<AuthResponse>(`${this.baseUrl}/auth/login`, request)\n      .pipe(\n        tap(response => {\n          localStorage.setItem('token', response.token);\n          localStorage.setItem('userId', response.id);\n          this.tokenSubject.next(response.token);\n          this.userIdSubject.next(response.id);\n        })\n      );\n  }\n\n  logout(): void {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    this.tokenSubject.next(null);\n    this.userIdSubject.next(null);\n    this.router.navigate(['/']);\n  }\n\n  forgotPassword(email: string): Observable<string> {\n    return this.http.post(`${this.baseUrl.replace('/api', '')}/auth/forgot-password`, { email }, { responseType: 'text' });\n  }\n\n  resetPassword(request: ResetPasswordRequest): Observable<string> {\n    return this.http.post(`${this.baseUrl.replace('/api', '')}/auth/reset-password`, request, { responseType: 'text' });\n  }\n\n  isAuthenticated(): boolean {\n    return this.getToken() !== null;\n  }\n\n  getCurrentUserId(): string | null {\n    return this.userIdSubject.value;\n  }\n\n  getToken(): string | null {\n    return this.tokenSubject.value;\n  }\n}\n"],"mappings":"AAEA,SAAqBA,eAAe,QAAQ,MAAM;AAClD,SAASC,GAAG,QAAQ,gBAAgB;AAEpC,SAASC,WAAW,QAAQ,gCAAgC;;;;AAM5D,OAAM,MAAOC,WAAW;EAQtBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAP5C,KAAAC,OAAO,GAAGL,WAAW,CAACM,MAAM;IAC5B,KAAAC,YAAY,GAAG,IAAIT,eAAe,CAAgBU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IAChF,KAAAC,aAAa,GAAG,IAAIZ,eAAe,CAAgBU,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAEnF,KAAAE,MAAM,GAAG,IAAI,CAACJ,YAAY,CAACK,YAAY,EAAE;IACzC,KAAAC,OAAO,GAAG,IAAI,CAACH,aAAa,CAACE,YAAY,EAAE;IAGhDE,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1CD,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEP,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5EK,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEP,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC9EK,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAE,IAAI,CAACR,YAAY,CAACS,KAAK,CAAC;IACtEF,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAE,IAAI,CAACL,aAAa,CAACM,KAAK,CAAC;EAC1E;EAEAC,QAAQA,CAACC,OAAwB;IAC/B,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAC,GAAG,IAAI,CAACd,OAAO,gBAAgB,EAAEa,OAAO,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EAC3F;EAEAC,KAAKA,CAACH,OAAqB;IACzB,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAe,GAAG,IAAI,CAACd,OAAO,aAAa,EAAEa,OAAO,CAAC,CACvEI,IAAI,CACHvB,GAAG,CAACwB,QAAQ,IAAG;MACbf,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAED,QAAQ,CAACE,KAAK,CAAC;MAC7CjB,YAAY,CAACgB,OAAO,CAAC,QAAQ,EAAED,QAAQ,CAACG,EAAE,CAAC;MAC3C,IAAI,CAACnB,YAAY,CAACoB,IAAI,CAACJ,QAAQ,CAACE,KAAK,CAAC;MACtC,IAAI,CAACf,aAAa,CAACiB,IAAI,CAACJ,QAAQ,CAACG,EAAE,CAAC;IACtC,CAAC,CAAC,CACH;EACL;EAEAE,MAAMA,CAAA;IACJpB,YAAY,CAACqB,UAAU,CAAC,OAAO,CAAC;IAChCrB,YAAY,CAACqB,UAAU,CAAC,QAAQ,CAAC;IACjC,IAAI,CAACtB,YAAY,CAACoB,IAAI,CAAC,IAAI,CAAC;IAC5B,IAAI,CAACjB,aAAa,CAACiB,IAAI,CAAC,IAAI,CAAC;IAC7B,IAAI,CAACvB,MAAM,CAAC0B,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7B;EAEAC,cAAcA,CAACC,KAAa;IAC1B,OAAO,IAAI,CAAC7B,IAAI,CAACgB,IAAI,CAAC,GAAG,IAAI,CAACd,OAAO,CAAC4B,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,uBAAuB,EAAE;MAAED;IAAK,CAAE,EAAE;MAAEZ,YAAY,EAAE;IAAM,CAAE,CAAC;EACxH;EAEAc,aAAaA,CAAChB,OAA6B;IACzC,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAC,GAAG,IAAI,CAACd,OAAO,CAAC4B,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,sBAAsB,EAAEf,OAAO,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EACrH;EAEAe,eAAeA,CAAA;IACb,OAAO,IAAI,CAACC,QAAQ,EAAE,KAAK,IAAI;EACjC;EAEAC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAAC3B,aAAa,CAACM,KAAK;EACjC;EAEAoB,QAAQA,CAAA;IACN,OAAO,IAAI,CAAC7B,YAAY,CAACS,KAAK;EAChC;;;uBA1DWf,WAAW,EAAAqC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAX1C,WAAW;MAAA2C,OAAA,EAAX3C,WAAW,CAAA4C,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}