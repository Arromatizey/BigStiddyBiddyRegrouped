{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class CreateRoomDialogComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.roomCreated = new EventEmitter();\n    this.dialogClosed = new EventEmitter();\n    this.isVisible = false;\n    this.createRoomForm = this.fb.group({\n      subject: ['', Validators.required],\n      level: ['', Validators.required],\n      topic: [''],\n      institution: [''],\n      focusDuration: [25, [Validators.required, Validators.min(1)]],\n      breakDuration: [5, [Validators.required, Validators.min(1)]]\n    });\n  }\n  show() {\n    this.isVisible = true;\n  }\n  hide() {\n    this.isVisible = false;\n    this.dialogClosed.emit();\n  }\n  onSubmit() {\n    if (this.createRoomForm.valid) {\n      const newRoom = {\n        ...this.createRoomForm.value,\n        isActive: true,\n        timerRunning: false,\n        isOnBreak: false\n      };\n      this.roomCreated.emit(newRoom);\n      this.hide();\n      this.createRoomForm.reset({\n        focusDuration: 25,\n        breakDuration: 5\n      });\n    }\n  }\n  static {\n    this.ɵfac = function CreateRoomDialogComponent_Factory(t) {\n      return new (t || CreateRoomDialogComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CreateRoomDialogComponent,\n      selectors: [[\"app-create-room-dialog\"]],\n      outputs: {\n        roomCreated: \"roomCreated\",\n        dialogClosed: \"dialogClosed\"\n      },\n      decls: 2,\n      vars: 0,\n      template: function CreateRoomDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"create-room-dialog works!\");\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["EventEmitter","Validators","CreateRoomDialogComponent","constructor","fb","roomCreated","dialogClosed","isVisible","createRoomForm","group","subject","required","level","topic","institution","focusDuration","min","breakDuration","show","hide","emit","onSubmit","valid","newRoom","value","isActive","timerRunning","isOnBreak","reset","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","outputs","decls","vars","template","CreateRoomDialogComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\Mehdi Chedad\\BigStiddyBiddyRegrouped\\frontend\\src\\app\\rooms\\create-room-dialog\\create-room-dialog.component.ts","C:\\Users\\Mehdi Chedad\\BigStiddyBiddyRegrouped\\frontend\\src\\app\\rooms\\create-room-dialog\\create-room-dialog.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Room } from '../../shared/models/room.models';\r\n\r\n@Component({\r\n  selector: 'app-create-room-dialog',\r\n  templateUrl: './create-room-dialog.component.html',\r\n  styleUrls: ['./create-room-dialog.component.css']\r\n})\r\nexport class CreateRoomDialogComponent {\r\n  @Output() roomCreated = new EventEmitter<Room>();\r\n  @Output() dialogClosed = new EventEmitter<void>();\r\n\r\n  createRoomForm: FormGroup;\r\n  isVisible = false;\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    this.createRoomForm = this.fb.group({\r\n      subject: ['', Validators.required],\r\n      level: ['', Validators.required],\r\n      topic: [''],\r\n      institution: [''],\r\n      focusDuration: [25, [Validators.required, Validators.min(1)]],\r\n      breakDuration: [5, [Validators.required, Validators.min(1)]]\r\n    });\r\n  }\r\n\r\n  show(): void {\r\n    this.isVisible = true;\r\n  }\r\n\r\n  hide(): void {\r\n    this.isVisible = false;\r\n    this.dialogClosed.emit();\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.createRoomForm.valid) {\r\n      const newRoom: Room = {\r\n        ...this.createRoomForm.value,\r\n        isActive: true,\r\n        timerRunning: false,\r\n        isOnBreak: false\r\n      };\r\n      \r\n      this.roomCreated.emit(newRoom);\r\n      this.hide();\r\n      this.createRoomForm.reset({\r\n        focusDuration: 25,\r\n        breakDuration: 5\r\n      });\r\n    }\r\n  }\r\n}\r\n","<p>create-room-dialog works!</p>\r\n"],"mappings":"AAAA,SAAoBA,YAAY,QAAgB,eAAe;AAC/D,SAAiCC,UAAU,QAAQ,gBAAgB;;;AAQnE,OAAM,MAAOC,yBAAyB;EAOpCC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IANZ,KAAAC,WAAW,GAAG,IAAIL,YAAY,EAAQ;IACtC,KAAAM,YAAY,GAAG,IAAIN,YAAY,EAAQ;IAGjD,KAAAO,SAAS,GAAG,KAAK;IAGf,IAAI,CAACC,cAAc,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAClCC,OAAO,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MAClCC,KAAK,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACU,QAAQ,CAAC;MAChCE,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,WAAW,EAAE,CAAC,EAAE,CAAC;MACjBC,aAAa,EAAE,CAAC,EAAE,EAAE,CAACd,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACe,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7DC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAChB,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACe,GAAG,CAAC,CAAC,CAAC,CAAC;KAC5D,CAAC;EACJ;EAEAE,IAAIA,CAAA;IACF,IAAI,CAACX,SAAS,GAAG,IAAI;EACvB;EAEAY,IAAIA,CAAA;IACF,IAAI,CAACZ,SAAS,GAAG,KAAK;IACtB,IAAI,CAACD,YAAY,CAACc,IAAI,EAAE;EAC1B;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACb,cAAc,CAACc,KAAK,EAAE;MAC7B,MAAMC,OAAO,GAAS;QACpB,GAAG,IAAI,CAACf,cAAc,CAACgB,KAAK;QAC5BC,QAAQ,EAAE,IAAI;QACdC,YAAY,EAAE,KAAK;QACnBC,SAAS,EAAE;OACZ;MAED,IAAI,CAACtB,WAAW,CAACe,IAAI,CAACG,OAAO,CAAC;MAC9B,IAAI,CAACJ,IAAI,EAAE;MACX,IAAI,CAACX,cAAc,CAACoB,KAAK,CAAC;QACxBb,aAAa,EAAE,EAAE;QACjBE,aAAa,EAAE;OAChB,CAAC;;EAEN;;;uBA3CWf,yBAAyB,EAAA2B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAzB9B,yBAAyB;MAAA+B,SAAA;MAAAC,OAAA;QAAA7B,WAAA;QAAAC,YAAA;MAAA;MAAA6B,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCTtCV,EAAA,CAAAY,cAAA,QAAG;UAAAZ,EAAA,CAAAa,MAAA,gCAAyB;UAAAb,EAAA,CAAAc,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}