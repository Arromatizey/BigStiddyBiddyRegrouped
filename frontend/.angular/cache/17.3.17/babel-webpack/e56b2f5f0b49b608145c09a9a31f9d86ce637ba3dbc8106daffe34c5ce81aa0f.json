{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let RoomsService = /*#__PURE__*/(() => {\n  class RoomsService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.apiUrl;\n    }\n    createRoom(room) {\n      // Backend returns UUID as JSON string like \"123e4567-e89b-12d3-a456-426614174000\"\n      // We need responseType: 'text' to handle the quoted UUID string\n      return this.http.post(`${this.baseUrl}/rooms`, room, {\n        responseType: 'text'\n      });\n    }\n    getRooms() {\n      // ✅ Real API call - endpoint confirmed to exist in backend\n      return this.http.get(`${this.baseUrl}/rooms/getAllRooms`);\n    }\n    updateTheme(roomId, themeConfig) {\n      return this.http.patch(`${this.baseUrl}/rooms/${roomId}/theme`, themeConfig);\n    }\n    updateDurations(roomId, request) {\n      return this.http.patch(`${this.baseUrl}/rooms/${roomId}/durations`, request);\n    }\n    joinRoom(roomId, userId) {\n      return this.http.post(`${this.baseUrl}/rooms/${roomId}/join?userId=${userId}`, {});\n    }\n    // Timer controls\n    startTimer(roomId) {\n      return this.http.post(`${this.baseUrl}/timer/${roomId}/start`, {});\n    }\n    pauseTimer(roomId) {\n      return this.http.post(`${this.baseUrl}/timer/${roomId}/pause`, {});\n    }\n    resumeTimer(roomId) {\n      return this.http.post(`${this.baseUrl}/timer/${roomId}/resume`, {});\n    }\n    resetTimer(roomId) {\n      return this.http.post(`${this.baseUrl}/timer/${roomId}/reset`, {});\n    }\n    static {\n      this.ɵfac = function RoomsService_Factory(t) {\n        return new (t || RoomsService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: RoomsService,\n        factory: RoomsService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return RoomsService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}